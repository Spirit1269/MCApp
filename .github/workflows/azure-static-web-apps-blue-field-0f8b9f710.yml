name: CI/CD Pipeline

on:
  push:          { branches: [ main ] }
  pull_request:  { branches: [ main ] }
  workflow_dispatch:

env:
  AZURE_ACR_NAME: motorcycleclubhubacr
  AZURE_WEBAPP_NAME: mcapp
  API_DIRECTORY: src/api
  DATABASE_CONNECTION_STRING: ${{ secrets.DATABASE_CONNECTION_STRING }}

###############################################################################
# 1. BUILD JOB
###############################################################################
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tag }}
    steps:
      # ─────────────────── checkout ───────────────────
      - name: Checkout Code
        uses: actions/checkout@v3

      # ────────── Node + pnpm ──────────
      - uses: pnpm/action-setup@v2
        with:
          version: 10.11.1
          run_install: false

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Force npm registry & install JS deps
        run: |
          echo "registry=https://registry.npmjs.org/" > ~/.npmrc
          pnpm install \
            --frozen-lockfile \
            --network-concurrency=1 \
            --fetch-retries=5 \
            --fetch-retry-factor=2 \
            --fetch-retry-mintimeout=10000 \
            --fetch-timeout=120000

      - name: Build Next.js (static export)
        run: pnpm next build    # `output: "export"` in next.config.js

      - name: Upload static site
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: out/

      # ────────── .NET build & EF migration ──────────
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore & build API
        working-directory: ${{ env.API_DIRECTORY }}
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: Run EF Core migrations
        working-directory: ${{ env.API_DIRECTORY }}
        run: |
          dotnet tool install -g dotnet-ef
          dotnet ef database update --connection "$DATABASE_CONNECTION_STRING"

      - name: Upload API build
        uses: actions/upload-artifact@v4
        with:
          name: api-build
          path: ${{ env.API_DIRECTORY }}/bin/Release

      # ────────── Compute image tag ──────────
      - name: Docker meta
        id: meta
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      # ────────── Azure login & ACR login ──────────
      - name: Docker Logout
        run: docker logout motorcycleclubhubacr.azurecr.io || true
        
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Container Registry Login
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login motorcycleclubhubacr.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin
      # ────────── Build & push container ──────────
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Build Docker image
        run: docker build -t motorcycleclubhubacr.azurecr.io/mcapp:${{ github.sha }} .

      - name: Push Docker image
        run: docker push motorcycleclubhubacr.azurecr.io/mcapp:${{ github.sha }}
###############################################################################
# 2. DEPLOY STATIC WEB APP
###############################################################################
  deploy-static-web-app:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install
      - name: Build static site
        run: pnpm build

      - name: Upload static frontend
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: out/


      - uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: out/

      - uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_FIELD_0F8B9F710 }}
          repo_token:                      ${{ secrets.GITHUB_TOKEN }}
          action: upload
          app_location: out
          api_location: ""             # no SWA serverless API
          

###############################################################################
# 3. DEPLOY API CONTAINER
###############################################################################
  deploy-api:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: motorcycleclubhubacr.azurecr.io/mcapp:${{ needs.build.outputs.image-tag }}